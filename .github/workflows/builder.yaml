name: Conda builder

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      arch:
        required: true
        type: string
      python-version:
        required: true
        type: string
      ref:
        required: true
        type: string
    secrets:
      token:
        required: true
jobs:
  build:
    name: Conda build for ${{ inputs.os }} ${{ inputs.arch }} py${{ inputs.python-version }}
    runs-on: ${{ inputs.os }}
    outputs:
      changelog: ${{ steps.setup.outputs.changelog }}
    steps:
      - name: Checkout build scripts
        uses: actions/checkout@v3
        with:
          repository: realthunder/FreeCADMakeImage
          submodules: true
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          repository: realthunder/FreeCAD
          ref: ${{ inputs.ref }}
          path: ./repo
          # submodules: true
      - name: Conda environment creation and activation
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ inputs.python-version }}
          environment-file: conda/freecad_asm3/build_env.yaml
          auto-update-conda: false
          auto-activate-base: false
          show-channel-urls: true
          miniforge-variant: Mambaforge
      - name: Install mamba build
        shell: bash -el {0}
        run: mamba install boa -c conda-forge
      - name: Set build variant
        id: setup
        shell: bash -xel {0}
        run: |
          if ${{ startsWith(inputs.os, 'macos') }}; then
            platform=osx
          elif ${{ startsWith(inputs.os, 'windows') }}; then
            platform=win
          else
            platform=linux
          fi
          if test -f repo/ChangeLog.md; then
            changelog=`sed -n "/-- ${{ inputs.ref }} --/=" repo/ChangeLog.md`
          fi
          if test -z $changelog; then
            echo "Warning: no change log"
            echo "changelog='Release ${{ inputs.ref }}'" >> "$GITHUB_OUTPUT"
          else
            EOF=EOF${{ inputs.os }}${{ inputs.arch }}${{ inputs.python-version }}${{ inputs.ref }}
            echo "changelog<<$EOF" >> "$GITHUB_OUTPUT"
            head -$((changelog - 1)) repo/ChangeLog.md >> "$GITHUB_OUTPUT"
            echo "$EOF" >> "$GITHUB_OUTPUT"
          fi
          printf "target_platform:\n  - %s-%s\n" $platform ${{ inputs.arch }} > conda/freecad_asm3/variant.yaml
          cat conda/freecad_asm3/variant.yaml
      - name: Build and upload the conda packages
        uses: realthunder/action-build-and-upload-conda-packages@main
        with:
          meta_yaml_dir: conda/freecad_asm3
          mambabuild: true
          python-version: ${{ inputs.python-version }}
          variant_conf: conda/freecad_asm3/variant.yaml
          user: realthunder
          label: main
          # debug: true
          token: ${{ secrets.token }}
          overwrite: true
          artifacts_name: artifacts

      - name: Make bundle
        id: make
        if: ${{ inputs.arch == '64' }}
        shell: bash -xl {0}
        run: |
            # plain conda has hiccup on dependency solving
            export CONDA_CMD=mamba
            # The command 'conda' is exposed as a bash function, which seems
            # to be not accessible if calling from another script on Windows
            # bash (Linux seems fine). So we try source our script (that calls
            # 'conda') as a work around.
            . conda/make-bundle.sh ${{ inputs.ref }} ${{ inputs.python-version }}

      - name: Delete old release assets
        if: ${{ env.RELEASE_NAME }}
        uses: realthunder/delete-release-assets@v1
        with:
          fail-if-no-release: false
          token: ${{ github.token }}
          tag: ${{ env.RELEASE_NAME }}
          # repository: realthunder/FreeCAD
          assets: |
              ${{ env.RELEASE_ASSETS }}

      - name: Upload release
        if: ${{ env.RELEASE_NAME }}
        uses: realthunder/action-gh-release@v1
        with:
          body: ${{ inputs.changelog }}
          files: build/out/*
          name: ${{ env.RELEASE_NAME }}
          prerelease: ${{ env.IS_PRERELEASE }}
          tag_name: ${{ env.RELEASE_NAME }}
          token: ${{ github.token }}

  bundle:
    if: ${{ inputs.arch == 'aarch64' }}
    needs: build
    uses: ./.github/workflows/bundler.yaml
    with:
      os: ${{ inputs.os }}
      arch: ${{ inputs.arch }}
      python-version: ${{ inputs.python-version }}
      ref: ${{ inputs.ref }}
      changelog: ${{ needs.build.outputs.changelog }}
